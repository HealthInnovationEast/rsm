name: mysql-test
on:
  pull_request:
    branches:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # - name: Shutdown Ubuntu MySQL (SUDO)
      #   run: sudo service mysql stop # Shutdown the Default MySQL, "sudo" is necessary, please not remove it
      - uses: mirromutth/mysql-action@v1.1
        with:
          host port: 3306 # Optional, default value is 3306. The port of host
          container port: 3306 # Optional, default value is 3306. The port of container
          character set server: 'utf8' # Optional, default value is 'utf8mb4'. The '--character-set-server' option for mysqld
          collation server: 'utf8_general_ci' # Optional, default value is 'utf8mb4_general_ci'. The '--collation-server' option for mysqld
          mysql version: '8.0' # Optional, default value is "latest". The version of the MySQL
          mysql database: 'unit_test' # Optional, default value is "test". The specified database which will be create
          mysql root password: ${{ secrets.MYSQL_ROOT }} # Required if "mysql user" is empty, default is empty. The root superuser password
          mysql user: 'developer' # Required if "mysql root password" is empty, default is empty. The superuser for the specified database. Can use secrets, too
          mysql password: ${{ secrets.MYSQL_USER }} # Required if "mysql user" exists. The password for the "mysql user"
      # checkout after DB setup to minimise wasted time
      - uses: actions/checkout@v2
      - name: Wait for MySQL
        run: |
          while ! mysqladmin ping --port 3306 --host=127.0.0.1 --password=${{ secrets.MYSQL_ROOT }} --silent; do
            sleep 1
          done
      - name: create-table
        run: |
          mysql --user=root --password=${{ secrets.MYSQL_ROOT }} --port 3306 --host=127.0.0.1 --database=unit_test < tests/data/loader.ddl
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Update pip
        run: |
          python -m pip install --upgrade pip
      - name: Package installs
        run: |
          pip install .[mysql,tests]
      - name: Create config
        run: |
           grep -B 1000 -m 1 '^connection:$' src/rsm/resources/parser.cfg.yaml > tmp.cfg.yaml
           echo '  host: "localhost"' >> tmp.cfg.yaml
           echo '  port: "3306"' >> tmp.cfg.yaml
           echo '  user: "developer"' >> tmp.cfg.yaml
           echo '  db: "unit_test"' >> tmp.cfg.yaml
           echo '  pw: "${{ secrets.MYSQL_USER }}"' >> tmp.cfg.yaml
      - name: rsm to-db
        run: |
          rsm to-db -c tmp.cfg.yaml -i tests/data/Input_74cols.xlsx -o tmp.result.csv
      # - name: Tests and coverage file
      #   run: |
      #     pytest --cache-clear --cov=rsm . > pytest-coverage.txt
